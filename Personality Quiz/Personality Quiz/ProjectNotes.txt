***************************************************************************************
                    Personality Quiz Project Notes/Outline
***************************************************************************************

Primary Quiz Question: "Which Animal Are You?"

***************************************************************************************

Possible Animals: Dog, Cat, Rabbit, Turtle

***************************************************************************************

Lessons Learned:
    - More practice on "layering" multiple view layouts based on question type"
        - just uncheck "installed" box in attributes for a stack view layout
        ** Programmatically hiding different views with the <viewOutletName>.isHidden
            attribute = true (in updateUI() method, executed in viewDidLoad()

    - More practice with alignment and auto-constraints

    - Progress View Objects (UI meter object that show user progress)

    - More practice w/enum types, using inheritence and data property definitions;




***************************************************************************************

Overview:

    -   The user will answer a series of questions and, based on their
        responses, will be placed into 1 of 4 categories of animals listed above

***************************************************************************************

Features - The app should accomplish the following goals:

    1) Introduce the player to the quiz

    2) Present the user with the questions and response choices

    3) Display the results to the user

***************************************************************************************

        Workflow, Controllers, Views, Data Models/Structures, View/Navigation Hierarchy

***************************************************************************************

- Workflow/View Controllers:
    Need at least 3 View Controllers (one for each feature)

    - No need for a view controller for each question (inefficient)

    - Example: user on question #9; if user wanted to go back to
        question #3, they would have to dismiss 6 view controllers to go back,
        and to get back to question #9 they would have to answer all the questions again.

    - For this project, we'll update a single screen with ALL of the questions displayed
        at once rather than different qeustions on separate screens

********************************************
- Views:

    - Consider the possible modes of input for answering questions
        - One question might be multiple choice w/ only 1 valid answer
        - Another question may have multiple possible answers
        - Another question may involve the user working with a slider
            to give a rating-type answer on a scale of 1-10

    - With a single view controller that controls all the
        questions and answers on the quiz, make sure you are only
        displaying the inputs that correspond with the current question!

    - You can then show or hide the appropriate view with the
        needed response type based on the question being asked

********************************************
- Data Models/Structures:
    How will you store the questions and user responses, possible answers, etc?

    - Could use an array of strings for the questions, but where would you store
        reponses? Maybe use a dictionary?

    - Best Solution:
        - Create a new Question struct that holds a collection of Answers
        - Create an Answer struct (answers need to be more than an array of
            strings to be able to relate/map them to possible outcomes)
        - Decide on some kind of result type to correspond with each answer;

    - USE ENUMS! A response to a question will always associate with one animal
        type - not both. Enum AnimalType can be Dog, Cat, Rabbit, or Turtle


***************************************************************************************

Quick Summary

- 3 View Controllers:

    1) Introduction Screen ViewController
        - Label object w/ information about the quiz
        - Button object to start the quiz

    2) Question/Response ViewController
        - Displays a question and several answers
        - Manages the responses
        - ViewController is refreshed for each question
        - Displays the correct set of controls based on the question type

    3) Results ViewController
        - Tallies up the answers and presents the final outcome
        - Result can be dismissed, allowing another player to start
            the quiz from the first view controller
        - Needs a segue back to the Introduction ViewController,
            OR a prompt Button to the 2nd ViewController


***************************************************************************************


Questions: 3 Types - single answer (press button for right answer), multiple answer (switch on all that apply),
and ranged response (single slider indicating response)

    1) Which of the following foods would you prefer to eat? (choose 1)
        - Vegetables forever (rabbit)
        - seafood (turtle)
        - steak (dog)
        - Caviar (cat)


    2) Are you an indoor person or an outdoor person? (Choose 1/Ranged?)


    3) Which of the following sounds like a better day to you? (Choose 1)
        - stay inside all day (turtle)
        - people watch (cat)
        - EVERY DAY IS THE BEST DAY (dog)
        - get outside and get some exercise (rabbit)

    4) What's your favorite season? (Choose more than 1)
        - Spring (rabbit)
        - Summer (turtle)
        - Fall (dog)
        - Winter (cat)

    5)























